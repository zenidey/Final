{"ast":null,"code":"var _jsxFileName = \"/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/AddPlane.js\";\nimport React from \"react\";\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPassengerForm } from './NewPassengerForm';\nimport { NewPlaneForm } from \"./NewPlaneForm\"; // export const AddPlane = (props) => {\n//     const { plane, updatePlane} = props;\n//     const deletePlane = () => {\n//         props.deletePlane(plane);\n//     }\n//     const deletePassenger = (passenger) => {\n//         console.log('inside deletePassenger function in Plane');\n//         // console.log(passengerId);\n//         const updatedPlane = {\n//             ...plane,\n//             passengers: plane.passengers.filter((x) => x !== passenger) //removed id\n//         };\n//         console.log(passenger); // the passenger that was deleted\n//         updatePlane(updatedPlane);\n//     }\n//     const addNewPassenger = (passenger) => {\n//         console.log('inside addNewPassenger in Plane.js');\n// \t\tconsole.log('passenger.name is: ' + passenger.name);\n// \t\tconsole.log('passenger.area is ' + passenger.area);\n//         return updatePlane({...plane, passengers: [...plane.passengers, passenger]})\n//     };\n//     const addNewPlane = (plane) => {\n//         console.log('inside addNewPlane in AddPlane.js');\n// \t\tconsole.log('plane.name is: ' + plane.name);\n//         return updatePlane({...plane, passengers: [...plane]})\n//     };\n//     // const passengers = () => (  //creating passengers\n//     //     <ul>\n//     //         {plane.passengers.map((passenger, index) => (\n//     //             <li key={index}>\n//     //                 <label>{`Name: ${passenger.name} Area: ${passenger.area}`}</label>\n//     //                 <button onClick={(e) => deletePassenger(passenger)}>Delete Passenger</button> \n//     //                 {/* removed id from passenger prop */}\n//     //             </li>\n//     //         ))}\n//     //     </ul>\n//     // );\n//     const planes = () => (\n//         <ul>\n//             {plane.map((plane, index, passenger) => (\n//                 <li key={index}>\n//                     <label>{`New Plane Name: ${plane.name}`}</label>\n//                     <button onClick={(e) => addNewPassenger(passenger)}>Add Passengers</button> \n//                 </li>\n//             ))}\n//         </ul>\n//     )\n//     console.log({...plane});\n//     return (\n//         <div>\n//             <h1>{plane} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 // [planes]({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPlaneForm \n//             addNewPlane={addNewPlane}\n//             addNewPassenger={addNewPassenger} \n//             deletePassenger={deletePassenger}/>\n//             {/* <h1>{plane.name} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 passengers({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPassengerForm addNewPassenger={addNewPassenger} /> */}\n//         </div>\n//     );\n// };\n// export default class AddPlane extends React.Component{ \n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             reviews: props.reviews\n//         }\n//     }\n//     handleCallback = (reviewData) => { this.setState({reviews: reviewData}) } // retrieves data from ReviewForm \n//     render() { \n//     let {reviews} = this.state;\n//     console.log({reviews});\n//      return( \n//          <div>  \n//             <div>\n//              {reviews} \n//              {/* Displaying the reviews */}\n//              </div><br/>\n//              <div>\n//              <ReviewForm handleCallback = {this.handleCallback}/> \n//              {/* Passing the callback function to the ReviewForm as props from the Review */}\n//             </div> \n//          </div> \n//      ) \n//  } \n// } \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddPlane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planes: props.planes,\n      name: props.name\n    };\n  }\n\n  render() {\n    let planes;\n\n    if (this.state.planes) {\n      planes = this.state.planes.map((plane, index) => /*#__PURE__*/_jsxDEV(Plane, { ...plane\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 62\n      }, this)); // for (let comment of this.state.comments) {\n      //     comments.push(<Comment {...comment} />);   // the comment array will contain any jsx comments that were within the state\n      // }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        children: \"Username and Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(LikeButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReplyButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), comments]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/AddPlane.js"],"names":["React","planesApi","NewPassengerForm","NewPlaneForm","AddPlane","Component","constructor","props","state","planes","name","render","map","plane","index","content","comments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAGA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAGA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADL;AAETC,MAAAA,IAAI,EAAEH,KAAK,CAACG;AAFH,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAIF,MAAJ;;AACA,QAAI,KAAKD,KAAL,CAAWC,MAAf,EAAuB;AACnBA,MAAAA,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBG,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,kBAAkB,QAAC,KAAD,OAAyBD;AAAzB,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cAAxC,CAAT,CADmB,CAEnB;AACA;AACA;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACK,KAAKN,KAAL,CAAWO;AADhB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIKC,QAJL;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAnCiD","sourcesContent":["import React from \"react\";\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPassengerForm } from './NewPassengerForm';\nimport { NewPlaneForm } from \"./NewPlaneForm\";\n\n\n// export const AddPlane = (props) => {\n\n//     const { plane, updatePlane} = props;\n\n\n//     const deletePlane = () => {\n//         props.deletePlane(plane);\n//     }\n\n//     const deletePassenger = (passenger) => {\n//         console.log('inside deletePassenger function in Plane');\n//         // console.log(passengerId);\n//         const updatedPlane = {\n//             ...plane,\n//             passengers: plane.passengers.filter((x) => x !== passenger) //removed id\n//         };\n//         console.log(passenger); // the passenger that was deleted\n//         updatePlane(updatedPlane);\n//     }\n\n//     const addNewPassenger = (passenger) => {\n//         console.log('inside addNewPassenger in Plane.js');\n// \t\tconsole.log('passenger.name is: ' + passenger.name);\n// \t\tconsole.log('passenger.area is ' + passenger.area);\n//         return updatePlane({...plane, passengers: [...plane.passengers, passenger]})\n//     };\n\n//     const addNewPlane = (plane) => {\n//         console.log('inside addNewPlane in AddPlane.js');\n// \t\tconsole.log('plane.name is: ' + plane.name);\n//         return updatePlane({...plane, passengers: [...plane]})\n//     };\n\n\n\n//     // const passengers = () => (  //creating passengers\n//     //     <ul>\n//     //         {plane.passengers.map((passenger, index) => (\n//     //             <li key={index}>\n//     //                 <label>{`Name: ${passenger.name} Area: ${passenger.area}`}</label>\n//     //                 <button onClick={(e) => deletePassenger(passenger)}>Delete Passenger</button> \n//     //                 {/* removed id from passenger prop */}\n//     //             </li>\n//     //         ))}\n            \n//     //     </ul>\n//     // );\n\n//     const planes = () => (\n//         <ul>\n//             {plane.map((plane, index, passenger) => (\n//                 <li key={index}>\n//                     <label>{`New Plane Name: ${plane.name}`}</label>\n//                     <button onClick={(e) => addNewPassenger(passenger)}>Add Passengers</button> \n//                 </li>\n//             ))}\n//         </ul>\n//     )\n\n//     console.log({...plane});\n\n\n//     return (\n//         <div>\n\n//             <h1>{plane} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 // [planes]({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPlaneForm \n//             addNewPlane={addNewPlane}\n//             addNewPassenger={addNewPassenger} \n//             deletePassenger={deletePassenger}/>\n//             {/* <h1>{plane.name} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 passengers({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPassengerForm addNewPassenger={addNewPassenger} /> */}\n            \n//         </div>\n//     );\n// };\n\n\n\n\n\n// export default class AddPlane extends React.Component{ \n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             reviews: props.reviews\n//         }\n//     }\n    \n//     handleCallback = (reviewData) => { this.setState({reviews: reviewData}) } // retrieves data from ReviewForm \n\n\n//     render() { \n\n//     let {reviews} = this.state;\n//     console.log({reviews});\n\n//      return( \n\n//          <div>  \n//             <div>\n//              {reviews} \n//              {/* Displaying the reviews */}\n//              </div><br/>\n\n//              <div>\n//              <ReviewForm handleCallback = {this.handleCallback}/> \n//              {/* Passing the callback function to the ReviewForm as props from the Review */}\n//             </div> \n//          </div> \n\n//      ) \n\n//  } \n// } \n\n\nexport default class AddPlane extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            planes: props.planes,\n            name: props.name,\n        };\n    }\n    \n    render() {\n\n        let planes;\n        if (this.state.planes) { \n            planes = this.state.planes.map((plane, index) => <Plane key = {index} {...plane} />);\n            // for (let comment of this.state.comments) {\n            //     comments.push(<Comment {...comment} />);   // the comment array will contain any jsx comments that were within the state\n            // }\n        }\n        return(\n            <div className=\"card w-75\">\n                <div className=\"card-header bg-primary text-white\">\n                    Username and Time\n                </div>\n                <div className=\"card-body\">\n                    {this.state.content}\n                </div>\n                <div className=\"card-footer\">\n                    <LikeButton />\n                    <ReplyButton />\n\n                    {comments}  \n                </div>\n            </div>\n        );\n\n    }\n}"]},"metadata":{},"sourceType":"module"}