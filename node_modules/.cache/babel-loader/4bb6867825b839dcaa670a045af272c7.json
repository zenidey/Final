{"ast":null,"code":"var _jsxFileName = \"/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/AddPlane.js\";\nimport React from \"react\";\nimport { Plane } from \"./Plane\";\nimport { PlaneList } from \"./PlaneList\";\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPassengerForm } from './NewPassengerForm';\nimport { NewPlaneForm } from \"./NewPlaneForm\"; // export const AddPlane = (props) => {\n//     const { plane, updatePlane} = props;\n//     const deletePlane = () => {\n//         props.deletePlane(plane);\n//     }\n//     const deletePassenger = (passenger) => {\n//         console.log('inside deletePassenger function in Plane');\n//         // console.log(passengerId);\n//         const updatedPlane = {\n//             ...plane,\n//             passengers: plane.passengers.filter((x) => x !== passenger) //removed id\n//         };\n//         console.log(passenger); // the passenger that was deleted\n//         updatePlane(updatedPlane);\n//     }\n//     const addNewPassenger = (passenger) => {\n//         console.log('inside addNewPassenger in Plane.js');\n// \t\tconsole.log('passenger.name is: ' + passenger.name);\n// \t\tconsole.log('passenger.area is ' + passenger.area);\n//         return updatePlane({...plane, passengers: [...plane.passengers, passenger]})\n//     };\n//     const addNewPlane = (plane) => {\n//         console.log('inside addNewPlane in AddPlane.js');\n// \t\tconsole.log('plane.name is: ' + plane.name);\n//         return updatePlane({...plane, passengers: [...plane]})\n//     };\n//     // const passengers = () => (  //creating passengers\n//     //     <ul>\n//     //         {plane.passengers.map((passenger, index) => (\n//     //             <li key={index}>\n//     //                 <label>{`Name: ${passenger.name} Area: ${passenger.area}`}</label>\n//     //                 <button onClick={(e) => deletePassenger(passenger)}>Delete Passenger</button> \n//     //                 {/* removed id from passenger prop */}\n//     //             </li>\n//     //         ))}\n//     //     </ul>\n//     // );\n//     const planes = () => (\n//         <ul>\n//             {plane.map((plane, index, passenger) => (\n//                 <li key={index}>\n//                     <label>{`New Plane Name: ${plane.name}`}</label>\n//                     <button onClick={(e) => addNewPassenger(passenger)}>Add Passengers</button> \n//                 </li>\n//             ))}\n//         </ul>\n//     )\n//     console.log({...plane});\n//     return (\n//         <div>\n//             <h1>{plane} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 // [planes]({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPlaneForm \n//             addNewPlane={addNewPlane}\n//             addNewPassenger={addNewPassenger} \n//             deletePassenger={deletePassenger}/>\n//             {/* <h1>{plane.name} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 passengers({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPassengerForm addNewPassenger={addNewPassenger} /> */}\n//         </div>\n//     );\n// };\n// export default class AddPlane extends React.Component{ \n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             reviews: props.reviews\n//         }\n//     }\n//     handleCallback = (reviewData) => { this.setState({reviews: reviewData}) } // retrieves data from ReviewForm \n//     render() { \n//     let {reviews} = this.state;\n//     console.log({reviews});\n//      return( \n//          <div>  \n//             <div>\n//              {reviews} \n//              {/* Displaying the reviews */}\n//              </div><br/>\n//              <div>\n//              <ReviewForm handleCallback = {this.handleCallback}/> \n//              {/* Passing the callback function to the ReviewForm as props from the Review */}\n//             </div> \n//          </div> \n//      ) \n//  } \n// } \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddPlane extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewPlane = plane => {\n      console.log('inside addNewPlane in AddPlane.js');\n      console.log('plane.name is: ' + plane.name);\n      return updatePlane({ ...plane,\n        passengers: [...plane]\n      });\n    };\n\n    this.state = {\n      planes: props.planes,\n      name: props.name\n    };\n  }\n\n  render() {\n    let planes = [];\n\n    if (this.state.planes) {\n      for (let plane of this.state.planes) {\n        planes.push( /*#__PURE__*/_jsxDEV(PlaneList, { ...plane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this));\n      }\n    } // let planes;\n    // if (this.state.planes) { \n    //     planes = this.state.planes.map((plane, index) => <NewPlaneForm key = {index} {...plane} />);\n    //     // for (let comment of this.state.comments) {\n    //     //     comments.push(<Comment {...comment} />);   // the comment array will contain any jsx comments that were within the state\n    //     // }\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.name, planes, /*#__PURE__*/_jsxDEV(NewPlaneForm, {\n        addNewPlane: addNewPlane\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/AddPlane.js"],"names":["React","Plane","PlaneList","planesApi","NewPassengerForm","NewPlaneForm","AddPlane","Component","constructor","props","addNewPlane","plane","console","log","name","updatePlane","passengers","state","planes","render","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAGA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAGA,OAAO,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASdC,WATc,GASCC,KAAD,IAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACND,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,KAAK,CAACG,IAAtC;AACM,aAAOC,WAAW,CAAC,EAAC,GAAGJ,KAAJ;AAAWK,QAAAA,UAAU,EAAE,CAAC,GAAGL,KAAJ;AAAvB,OAAD,CAAlB;AACH,KAbiB;;AAEd,SAAKM,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAET,KAAK,CAACS,MADL;AAETJ,MAAAA,IAAI,EAAEL,KAAK,CAACK;AAFH,KAAb;AAIH;;AAUDK,EAAAA,MAAM,GAAG;AAEL,QAAID,MAAM,GAAG,EAAb;;AACA,QAAI,KAAKD,KAAL,CAAWC,MAAf,EAAuB;AACnB,WAAI,IAAIP,KAAR,IAAiB,KAAKM,KAAL,CAAWC,MAA5B,EAAmC;AAC/BA,QAAAA,MAAM,CAACE,IAAP,eAAY,QAAC,SAAD,OAAeT;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACH;AACJ,KAPI,CAQL;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,wBACI;AAAA,iBACS,KAAKM,KAAL,CAAWH,IADpB,EAESI,MAFT,eAGQ,QAAC,YAAD;AAAc,QAAA,WAAW,EAAER;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxCyC","sourcesContent":["import React from \"react\";\nimport { Plane } from \"./Plane\";\nimport { PlaneList } from \"./PlaneList\";\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPassengerForm } from './NewPassengerForm';\nimport { NewPlaneForm } from \"./NewPlaneForm\";\n\n\n// export const AddPlane = (props) => {\n\n//     const { plane, updatePlane} = props;\n\n\n//     const deletePlane = () => {\n//         props.deletePlane(plane);\n//     }\n\n//     const deletePassenger = (passenger) => {\n//         console.log('inside deletePassenger function in Plane');\n//         // console.log(passengerId);\n//         const updatedPlane = {\n//             ...plane,\n//             passengers: plane.passengers.filter((x) => x !== passenger) //removed id\n//         };\n//         console.log(passenger); // the passenger that was deleted\n//         updatePlane(updatedPlane);\n//     }\n\n//     const addNewPassenger = (passenger) => {\n//         console.log('inside addNewPassenger in Plane.js');\n// \t\tconsole.log('passenger.name is: ' + passenger.name);\n// \t\tconsole.log('passenger.area is ' + passenger.area);\n//         return updatePlane({...plane, passengers: [...plane.passengers, passenger]})\n//     };\n\n//     const addNewPlane = (plane) => {\n//         console.log('inside addNewPlane in AddPlane.js');\n// \t\tconsole.log('plane.name is: ' + plane.name);\n//         return updatePlane({...plane, passengers: [...plane]})\n//     };\n\n\n\n//     // const passengers = () => (  //creating passengers\n//     //     <ul>\n//     //         {plane.passengers.map((passenger, index) => (\n//     //             <li key={index}>\n//     //                 <label>{`Name: ${passenger.name} Area: ${passenger.area}`}</label>\n//     //                 <button onClick={(e) => deletePassenger(passenger)}>Delete Passenger</button> \n//     //                 {/* removed id from passenger prop */}\n//     //             </li>\n//     //         ))}\n            \n//     //     </ul>\n//     // );\n\n//     const planes = () => (\n//         <ul>\n//             {plane.map((plane, index, passenger) => (\n//                 <li key={index}>\n//                     <label>{`New Plane Name: ${plane.name}`}</label>\n//                     <button onClick={(e) => addNewPassenger(passenger)}>Add Passengers</button> \n//                 </li>\n//             ))}\n//         </ul>\n//     )\n\n//     console.log({...plane});\n\n\n//     return (\n//         <div>\n\n//             <h1>{plane} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 // [planes]({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPlaneForm \n//             addNewPlane={addNewPlane}\n//             addNewPassenger={addNewPassenger} \n//             deletePassenger={deletePassenger}/>\n//             {/* <h1>{plane.name} </h1>\n//             <button onClick={deletePlane}>Delete Plane</button> \n//             {\n//                 passengers({ passengers, planeId: plane.id, deletePassenger })\n//             }\n//             <NewPassengerForm addNewPassenger={addNewPassenger} /> */}\n            \n//         </div>\n//     );\n// };\n\n\n\n\n\n// export default class AddPlane extends React.Component{ \n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             reviews: props.reviews\n//         }\n//     }\n    \n//     handleCallback = (reviewData) => { this.setState({reviews: reviewData}) } // retrieves data from ReviewForm \n\n\n//     render() { \n\n//     let {reviews} = this.state;\n//     console.log({reviews});\n\n//      return( \n\n//          <div>  \n//             <div>\n//              {reviews} \n//              {/* Displaying the reviews */}\n//              </div><br/>\n\n//              <div>\n//              <ReviewForm handleCallback = {this.handleCallback}/> \n//              {/* Passing the callback function to the ReviewForm as props from the Review */}\n//             </div> \n//          </div> \n\n//      ) \n\n//  } \n// } \n\n\nexport class AddPlane extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            planes: props.planes,\n            name: props.name,\n        };\n    }\n\n\n        addNewPlane = (plane) => {\n        console.log('inside addNewPlane in AddPlane.js');\n\t\tconsole.log('plane.name is: ' + plane.name);\n        return updatePlane({...plane, passengers: [...plane]})\n    };\n\n    \n    render() {\n\n        let planes = [];\n        if (this.state.planes) {\n            for(let plane of this.state.planes){\n                planes.push(<PlaneList {...plane} />);\n            }\n        }\n        // let planes;\n        // if (this.state.planes) { \n        //     planes = this.state.planes.map((plane, index) => <NewPlaneForm key = {index} {...plane} />);\n        //     // for (let comment of this.state.comments) {\n        //     //     comments.push(<Comment {...comment} />);   // the comment array will contain any jsx comments that were within the state\n        //     // }\n        // }\n        return(\n            <div>\n                    {this.state.name}\n                    {planes}  \n                    <NewPlaneForm addNewPlane={addNewPlane} />\n            </div>\n        );\n\n    }\n}"]},"metadata":{},"sourceType":"module"}