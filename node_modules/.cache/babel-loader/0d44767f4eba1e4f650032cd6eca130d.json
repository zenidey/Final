{"ast":null,"code":"var _jsxFileName = \"/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/PlaneList.js\";\nimport React from \"react\";\nimport { Plane } from './Plane';\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPlaneForm } from \"./NewPlaneForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlaneList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      planes: [],\n      planeDeleted: false\n    };\n\n    this.fetchPlanes = async () => {\n      const planes = await planesApi.get();\n      this.setState({\n        planes\n      });\n    };\n\n    this.updatePlane = async updatedPlane => {\n      await planesApi.put(updatedPlane);\n      this.fetchPlanes();\n    };\n\n    this.createPlane = async plane => {\n      await pl;\n    };\n\n    this.deletePlane = async plane => {\n      await planesApi.delete(plane);\n      this.state.planeDeleted = true;\n      this.fetchPlanes();\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPlanes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plane-list\",\n      children: [/*#__PURE__*/_jsxDEV(NewPlaneForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this), this.state.planes.map(plane => /*#__PURE__*/_jsxDEV(Plane, {\n        plane: plane,\n        updatePlane: this.updatePlane,\n        deletePlane: this.deletePlane\n      }, plane.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/components/PlaneList.js"],"names":["React","Plane","planesApi","NewPlaneForm","PlaneList","Component","state","planes","planeDeleted","fetchPlanes","get","setState","updatePlane","updatedPlane","put","createPlane","plane","pl","deletePlane","delete","componentDidMount","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,OAAO,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,YAAY,EAAE;AAFV,KADmC;;AAAA,SAU3CC,WAV2C,GAU7B,YAAY;AACtB,YAAMF,MAAM,GAAG,MAAML,SAAS,CAACQ,GAAV,EAArB;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACH,KAb0C;;AAAA,SAe3CK,WAf2C,GAe7B,MAAOC,YAAP,IAAwB;AAClC,YAAMX,SAAS,CAACY,GAAV,CAAcD,YAAd,CAAN;AACA,WAAKJ,WAAL;AACH,KAlB0C;;AAAA,SAoB3CM,WApB2C,GAoB7B,MAAMC,KAAN,IAAgB;AAC1B,YAAMC,EAAN;AACH,KAtB0C;;AAAA,SAwB3CC,WAxB2C,GAwB7B,MAAMF,KAAN,IAAgB;AAC1B,YAAMd,SAAS,CAACiB,MAAV,CAAiBH,KAAjB,CAAN;AACA,WAAKV,KAAL,CAAWE,YAAX,GAA0B,IAA1B;AACA,WAAKC,WAAL;AACJ,KA5B2C;AAAA;;AAM3CW,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,WAAL;AACH;;AAsBDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACK,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADL,EAGK,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAuBN,KAAD,iBACnB,QAAC,KAAD;AACA,QAAA,KAAK,EAAEA,KADP;AAGA,QAAA,WAAW,EAAE,KAAKJ,WAHlB;AAIA,QAAA,WAAW,EAAE,KAAKM;AAJlB,SAEKF,KAAK,CAACO,EAFX;AAAA;AAAA;AAAA;AAAA,cADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA7C0C","sourcesContent":["import React from \"react\";\nimport { Plane } from './Plane';\nimport { planesApi } from \"../rest/PlanesApi\";\nimport { NewPlaneForm } from \"./NewPlaneForm\";\n\nexport class PlaneList extends React.Component {\n    state = {\n        planes: [],\n        planeDeleted: false\n    };\n\n    componentDidMount() {\n        this.fetchPlanes();\n    };\n\n    fetchPlanes = async () => {\n        const planes = await planesApi.get();\n        this.setState({ planes });\n    };\n\n    updatePlane = async (updatedPlane) => {\n        await planesApi.put(updatedPlane);\n        this.fetchPlanes();\n    };\n\n    createPlane = async(plane) => {\n        await pl\n    }\n\n    deletePlane = async(plane) => {\n        await planesApi.delete(plane);\n        this.state.planeDeleted = true;\n        this.fetchPlanes();\n   }\n\n    render() {\n        return(\n            <div className='plane-list'>\n                {<NewPlaneForm/>}\n                {/* <NewPlaneForm addNewPlane={addNewPlane} /> */}\n                {this.state.planes.map((plane) => (\n                    <Plane\n                    plane={plane}\n                    key={plane.id}\n                    updatePlane={this.updatePlane}\n                    deletePlane={this.deletePlane}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}