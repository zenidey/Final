{"ast":null,"code":"const PLANES_ENDPOINT = 'https://crudcrud.com/api/b2b918bfa3ab4151a89ad63e020e0470/planes';\n\nclass PlanesApi {\n  constructor() {\n    this.get = async () => {\n      try {\n        const resp = await fetch(PLANES_ENDPOINT);\n        const data = await resp.json();\n        return data;\n      } catch (e) {\n        console.log('Oops, looks like fetchPlanes had an issue.', e);\n      }\n    };\n\n    this.create = async plane => {\n      try {\n        console.log(`${PLANES_ENDPOINT}`);\n        const resp = await fetch(`${PLANES_ENDPOINT}/`, {\n          method: 'POST',\n          mode: 'cors',\n          // no-cors\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: plane\n          })\n        });\n        console.log(\"resp is: \", resp);\n        return await resp.json();\n      } catch (e) {\n        console.log('Oops, looks like creating/POST planes had an issue.');\n      }\n    };\n\n    this.put = async plane => {\n      try {\n        const resp = await fetch(`${PLANES_ENDPOINT}/${plane._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(plane)\n        });\n        return await resp.json();\n      } catch (e) {\n        console.log('Oops, looks like updating planes had an issue.', e);\n      }\n    };\n\n    this.delete = async plane => {\n      try {\n        const resp = await fetch(`${PLANES_ENDPOINT}/${plane._id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        return resp;\n      } catch (e) {\n        console.log('Problem deleting plane.', e);\n      }\n    };\n  }\n\n}\n\nexport const planesApi = new PlanesApi();","map":{"version":3,"sources":["/Users/zenideysaavedra/Promineo/react-3/lesson-3/test/src/rest/PlanesApi.js"],"names":["PLANES_ENDPOINT","PlanesApi","get","resp","fetch","data","json","e","console","log","create","plane","method","mode","headers","body","JSON","stringify","name","put","_id","delete","planesApi"],"mappings":"AAAA,MAAMA,eAAe,GAAG,kEAAxB;;AAGA,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACZC,GADY,GACN,YAAY;AACd,UAAI;AACA,cAAMC,IAAI,GAAG,MAAMC,KAAK,CAACJ,eAAD,CAAxB;AACA,cAAMK,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACA,eAAOD,IAAP;AACH,OAJD,CAIE,OAAME,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DF,CAA1D;AACH;AACJ,KATW;;AAAA,SAWZG,MAXY,GAWH,MAAOC,KAAP,IAAiB;AACtB,UAAG;AACCH,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAET,eAAgB,EAA/B;AACA,cAAMG,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEJ,eAAgB,GAApB,EAAwB;AAChDY,UAAAA,MAAM,EAAE,MADwC;AAEhDC,UAAAA,IAAI,EAAE,MAF0C;AAElC;AACdC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAHuC;AAMhDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,YAAAA,IAAI,EAAEP;AADW,WAAf;AAN0C,SAAxB,CAAxB;AAYAH,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,IAAzB;AACA,eAAO,MAAMA,IAAI,CAACG,IAAL,EAAb;AACH,OAhBD,CAkBA,OAAMC,CAAN,EAAQ;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACH;AACJ,KAjCW;;AAAA,SAmCZU,GAnCY,GAmCN,MAAOR,KAAP,IAAiB;AACnB,UAAI;AACA,cAAMR,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEJ,eAAgB,IAAGW,KAAK,CAACS,GAAI,EAAjC,EAAoC;AACxDR,UAAAA,MAAM,EAAE,KADgD;AAExDE,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAF+C;AAKxDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALkD,SAApC,CAAxB;AAOA,eAAO,MAAMR,IAAI,CAACG,IAAL,EAAb;AACH,OATD,CASE,OAAMC,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DF,CAA9D;AACH;AACJ,KAhDW;;AAAA,SAkDZc,MAlDY,GAkDH,MAAMV,KAAN,IAAgB;AACrB,UAAI;AACA,cAAMR,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEJ,eAAgB,IAAGW,KAAK,CAACS,GAAI,EAAjC,EAAoC;AACxDR,UAAAA,MAAM,EAAE,QADgD;AAExDE,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAF+C,SAApC,CAAxB;AAMA,eAAOX,IAAP;AACH,OARD,CAQE,OAAMI,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,CAAvC;AACH;AACJ,KA9DW;AAAA;;AAAA;;AAkEhB,OAAO,MAAMe,SAAS,GAAG,IAAIrB,SAAJ,EAAlB","sourcesContent":["const PLANES_ENDPOINT = 'https://crudcrud.com/api/b2b918bfa3ab4151a89ad63e020e0470/planes';\n\n\nclass PlanesApi { // this class handles all the api calls\n    get = async () => { \n        try {\n            const resp = await fetch(PLANES_ENDPOINT);\n            const data = await resp.json();\n            return data;\n        } catch(e) {\n            console.log('Oops, looks like fetchPlanes had an issue.', e);\n        }\n    }\n\n    create = async (plane) => {\n        try{\n            console.log(`${PLANES_ENDPOINT}`);\n            const resp = await fetch(`${PLANES_ENDPOINT}/`, { \n            method: 'POST',\n            mode: 'cors', // no-cors\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: plane\n            })\n            });\n            \n       \n            console.log(\"resp is: \", resp);\n            return await resp.json();\n        }\n    \n        catch(e){\n            console.log('Oops, looks like creating/POST planes had an issue.');\n        }\n    }\n\n    put = async (plane) => {\n        try {\n            const resp = await fetch(`${PLANES_ENDPOINT}/${plane._id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(plane)\n            });\n            return await resp.json();\n        } catch(e) {\n            console.log('Oops, looks like updating planes had an issue.', e);\n        }\n    }\n\n    delete = async(plane) => {\n        try {\n            const resp = await fetch(`${PLANES_ENDPOINT}/${plane._id}`, {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n            });\n            return resp;\n        } catch(e) {\n            console.log('Problem deleting plane.', e);\n        }\n    }\n\n}\n\nexport const planesApi = new PlanesApi();\n\n"]},"metadata":{},"sourceType":"module"}